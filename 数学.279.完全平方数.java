给定正整数 n，找到若干个完全平方数（比如 1, 4, 9, 16, ...）使得它们的和等于 n。你需要让组成和的完全平方数的个数最少。
示例 1:
输入: n = 12
输出: 3 
解释: 12 = 4 + 4 + 4.

示例 2:
输入: n = 13
输出: 2
解释: 13 = 4 + 9.
=============解法===========
这道题如果知道数学定理之后，相当于告诉你：
1.任何正整数都可以拆分成不超过4个数的平方和 ---> 答案只可能是1,2,3,4
2.如果一个数最少可以拆成4个数的平方和，则这个数还满足 n = (4^a)*(8b+7) ---> 因此可以先看这个数是否满足上述公式，如果不满足，答案就是1,2,3了
3.如果这个数本来就是某个数的平方，那么答案就是1，否则答案就只剩2,3了
4.如果答案是2，即n=a^2+b^2，那么我们可以枚举a，来验证，如果验证通过则答案是2
5.只能是3

class Solution {
    public int numSquares(int n) {
        while (n % 4 == 0)
            n /= 4;
        if (n % 8 == 7)
            return 4;
        if (n == Math.pow((int)Math.sqrt(n), 2))
            return 1;
        for (int k = 1; k *k <= n; k++) {
            int t = (int)Math.sqrt(n - k*k);
            if (t*t + k*k == n)
                return 2;
        }
        return 3;
    }
}
