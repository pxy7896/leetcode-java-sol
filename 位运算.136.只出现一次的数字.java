给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。
说明：你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？

示例 1:
输入: [2,2,1]
输出: 1

示例 2:
输入: [4,1,2,1,2]
输出: 4

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/single-number
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
==========================解法================================
这里应用异或的性质：
a ^ 0 = a; a ^ a = 0; 满足交换律和结合律： a ^ b ^ a = a ^ a ^ b = b
所以设a = 0，异或完所有的数字，结果就是只出现一次的那个数字。

class Solution {
    public int singleNumber(int[] nums) {
        int a = 0;
        for (int i:nums) 
            a = a ^ i;
        return a;
    }
}
